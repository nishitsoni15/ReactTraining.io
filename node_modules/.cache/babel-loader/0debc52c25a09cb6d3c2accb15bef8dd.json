{"ast":null,"code":"var _jsxFileName = \"/home/soninishit/Desktop/successive/react/React Training/counter-app/reactTraining.io/src/pages/registerForm.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { validUsername, validEmail, validPassword } from '../components/Regex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterFormPage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [nameErr, setNameErr] = useState(false);\n  const [emailErr, setEmailErr] = useState(false);\n  const [passwordErr, setPasswordErr] = useState(false);\n  const getData = \"data passed successfully!\";\n\n  const handleChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!validUsername.test(values.username)) {\n      setNameErr(true);\n    }\n\n    if (!validEmail.test(values.email)) {\n      setEmailErr(true);\n    }\n\n    if (!validPassword.test(values.password)) {\n      setPasswordErr(true);\n    }\n\n    if (nameErr === true && emailErr === true && passwordErr === true) {\n      navigate('/loginPrivate', {\n        state: {\n          getData\n        }\n      });\n    }\n\n    let newVal = localStorage.getItem('list');\n\n    if (newVal == null) {\n      newVal = [];\n      console.log('newval type', typeof newVal);\n      newVal.push(values);\n      localStorage.setItem('list', JSON.stringify(newVal));\n    } else {\n      let existVal = JSON.parse(newVal);\n      console.log('exist val', typeof existVal);\n      existVal.push(values);\n      console.log('exist val push', existVal);\n      localStorage.setItem('list', JSON.stringify(existVal));\n    }\n  };\n\n  const login = e => {\n    e.preventDefault();\n    navigate('/loginPrivate');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& .MuiTextField-root': {\n          width: '25ch'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Sign up Page:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        label: 'Name=\"username\"',\n        id: \"margin-normal\",\n        name: \"username\",\n        margin: \"normal\",\n        value: values.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), nameErr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"usename is invalid!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"email\",\n        label: 'Email=\"email\"',\n        id: \"margin-normal\",\n        name: \"email\",\n        margin: \"normal\",\n        value: values.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), emailErr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"email is invalid!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"password\",\n        label: 'Password=\"password\"',\n        id: \"margin-normal\",\n        name: \"password\",\n        margin: \"normal\",\n        value: values.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), passwordErr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"password is invalid!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSubmit,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: e => login(e),\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterFormPage, \"6SttUkenLSoh1N1/JIlBlff4Xuw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegisterFormPage;\nexport default RegisterFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterFormPage\");","map":{"version":3,"sources":["/home/soninishit/Desktop/successive/react/React Training/counter-app/reactTraining.io/src/pages/registerForm.js"],"names":["React","Box","TextField","Button","useState","useEffect","useNavigate","validUsername","validEmail","validPassword","RegisterFormPage","navigate","values","setValues","username","email","password","nameErr","setNameErr","emailErr","setEmailErr","passwordErr","setPasswordErr","getData","handleChange","e","target","name","value","handleSubmit","preventDefault","test","state","newVal","localStorage","getItem","console","log","push","setItem","JSON","stringify","existVal","parse","login","display","flexDirection","alignItems","width"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState,useEffect } from 'react';\nimport { useNavigate } from 'react-router';\nimport { validUsername, validEmail, validPassword} from '../components/Regex';\n\n\nconst RegisterFormPage = () => {\n  const navigate = useNavigate();\n  const [values,setValues] = useState({\n    username : \"\",\n    email : \"\",\n    password : \"\"\n  });\n  const [nameErr,setNameErr] = useState(false);\n  const [emailErr,setEmailErr] = useState(false);\n  const [passwordErr,setPasswordErr] = useState(false);\n  const getData = \"data passed successfully!\"\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name] : e.target.value,\n    })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();  \n\n    if(!validUsername.test(values.username)){\n        setNameErr(true);\n    }\n    if(!validEmail.test(values.email)){\n      setEmailErr(true);\n    }\n    if(!validPassword.test(values.password)){\n      setPasswordErr(true);\n    }\n    if (nameErr === true && emailErr === true && passwordErr === true){\n      navigate('/loginPrivate',{state:{getData}});\n    }\n    let newVal = localStorage.getItem('list')\n    if(newVal == null){\n      newVal = []\n      console.log('newval type',typeof(newVal))\n      newVal.push(values);\n      localStorage.setItem('list',JSON.stringify(newVal));\n    }else{\n      let existVal =  JSON.parse(newVal);\n      console.log('exist val',typeof(existVal));\n      existVal.push(values);\n      console.log('exist val push',existVal)\n      localStorage.setItem('list',JSON.stringify(existVal));\n    }\n   \n  }\n  const login = (e) => {\n    e.preventDefault()\n    navigate('/loginPrivate');\n  }\n    return(\n        <>\n         <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems:'center',\n        '& .MuiTextField-root': { width: '25ch' },\n      }}\n    >\n      <h1>Welcome to Sign up Page:</h1>\n      <TextField type=\"text\" label={'Name=\"username\"'} id=\"margin-normal\" name=\"username\" margin=\"normal\" value={values.username}  onChange={handleChange}/>\n      {nameErr && <p>usename is invalid!</p>}\n      <TextField type=\"email\" label={'Email=\"email\"'} id=\"margin-normal\" name=\"email\" margin=\"normal\"  value={values.email} onChange={handleChange}/>\n      {emailErr && <p>email is invalid!</p>}\n      <TextField type=\"password\" label={'Password=\"password\"'} id=\"margin-normal\" name=\"password\" margin=\"normal\" value={values.password} onChange={handleChange}/>\n      {passwordErr && <p>password is invalid!</p>}\n      <Button variant=\"contained\" onClick={handleSubmit}>Register</Button>\n      <h2>OR</h2>\n      <Button variant=\"contained\" onClick={(e) => login(e)}>Log In</Button>\n    </Box>\n        </>\n    )\n}\n\nexport default RegisterFormPage;\n\n\n"]},"metadata":{},"sourceType":"module"}